.clearfix() {
    *zoom: 1;

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

.transform(@string) {
	-webkit-transform: @string;
	-moz-transform: @string;
	-ms-transform: @string;
	-o-transform: @string;
	transform: @string;
}

.rotate(@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: rotate(@deg);
	-ms-transform: rotate(@deg);
	-o-transform: rotate(@deg);
	transform: rotate(@deg);
}

.translate(@x, @y:0) {
	-webkit-transform: translate(@x, @y);
	-moz-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y);
	-o-transform: translate(@x, @y);
	transform: translate(@x, @y);
}

.scale(@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: scale(@factor);
	-ms-transform: scale(@factor);
	-o-transform: scale(@factor);
	transform: scale(@factor);
}

.box-shadow(@string) {
	-webkit-box-shadow: @string;
    -moz-box-shadow: @string;
    box-shadow: @string;
}

.backface-visibility(@string) {
	-webkit-backface-visibility: @string;
	-moz-backface-visibility: @string;
    -ms-backface-visibility: @string;
    backface-visibility: @string;
}

.transform-style(@string) {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -o-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

.rems(@value) {
    @rem_value : (@value / @base_font);
    @lh_value : ((@value + 4) / @base_font);
    font-size: ~"@{rem_value}rem";
    line-height:  ~"@{lh_value}rem";
}